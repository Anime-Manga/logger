name: "CI/CD Pipeline"

on:
    pull_request:
        types: [opened, synchronize, reopened]
    release:
        types: [published]

jobs:
    test:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup node v22
              uses: actions/setup-node@v4
              with:
                  node-version: '22'

            - name: Installation pacakges
              run: npm i

            - name: Check syntax typescript
              run: npm run typecheck

            - name: Check syntax and rules of Eslint
              run: npm run eslint

            - name: Start test
              run: npm run test

    check-version:
        runs-on: ubuntu-latest
        needs: test
        if: github.event_name == 'release' && github.event.action == 'published'
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Check version
              run: |
                  TAG_VERSION=${GITHUB_REF#refs/tags/v}
                  PACKAGE_VERSION=$(node -p "require('./package.json').version")
                  if [ "$TAG_VERSION" != "$PACKAGE_VERSION" ]; then
                      echo "Error: Tag version ($TAG_VERSION) does not match package.json version ($PACKAGE_VERSION)"
                      exit 1
                  fi
    publish:
        runs-on: ubuntu-latest
        needs: check-version
        steps:
            - name: Checkout code
              uses: actions/checkout@v4
              
            - name: Setup node v22
              uses: actions/setup-node@v4
              with:
                  node-version: '22'
                  registry-url: 'https://registry.npmjs.org'

            - name: Installation pacakges
              run: npm i

            - name: Start build
              run: npm run build

            - name: Publish Package
              run: npm publish --provenance --access public
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
